# integration tests for nuxt ecosystem projects - scheduled or manual run for all suites
name: nuxt-ecosystem-ci

env:
  # 7 GiB by default on GitHub, setting to 6 GiB
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NODE_OPTIONS: --max-old-space-size=6144
  # configure corepack to be strict but not download newer versions or change anything
  COREPACK_DEFAULT_TO_LATEST: 0
  COREPACK_ENABLE_AUTO_PIN: 0
  COREPACK_ENABLE_STRICT: 1

on:
  schedule:
    - cron: "0 5 * * 1,3,5" # monday,wednesday,friday 5AM
  workflow_dispatch:
    inputs:
      refType:
        description: "type of ref"
        required: true
        type: choice
        options:
          - branch
          - tag
          - commit
          - release
        default: "branch"
      ref:
        description: "nuxt ref to use"
        required: true
        type: string
        default: "main"
      nitro:
        description: "the version of nitro to use"
        type: choice
        options:
          - "v3 nightly"
          - "v2 nightly"
          - "v2 latest"
        default: "v2 latest"
      repo:
        description: "nuxt repository to use"
        required: true
        type: string
        default: "nuxt/nuxt"
  repository_dispatch:
    types: [ecosystem-ci]
jobs:
  test-ecosystem:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - starter
          - content
          - ui
          - image
          - pinia
          - examples
          - example-layers-monorepo
          - bridge
          - nuxt-com
          - vite-pwa
          - docus
          - og-image
          - histoire
          - elk
          - devtools
          - fonts
          - scripts
          - cli
          - test-utils
          - module-builder
          - sanity-module
          - tailwindcss
          - sitemap
          - i18n-module
          - werewolves-assistant
          - storybook
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
        id: setup-node
      - run: corepack enable
      - run: pnpm --version
      - run: pnpm i --frozen-lockfile
      - run: >-
          pnpm tsx ecosystem-ci.ts
          --${{ inputs.refType || github.event.client_payload.refType || 'branch' }} ${{ inputs.ref || github.event.client_payload.ref || '3.x' }}
          --repo ${{ inputs.repo || github.event.client_payload.repo || 'nuxt/nuxt' }}
          ${{ matrix.suite }}
        id: ecosystem-ci-run
        env:
          NUXT_UI_PRO_TOKEN: ${{ secrets.NUXT_UI_PRO_TOKEN }}
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_TOKEN }}
          NITRO_VERSION: ${{ inputs.nitro || 'v2 latest' }}

      - if: always()
        run: pnpm tsx discord-webhook.ts
        env:
          WORKFLOW_NAME: ci
          REF_TYPE: ${{ inputs.refType || github.event.client_payload.refType || 'branch' }}
          REF: ${{ inputs.ref || github.event.client_payload.ref || '3.x' }}
          REPO: ${{ inputs.repo || github.event.client_payload.repo || 'nuxt/nuxt' }}
          SUITE: ${{ matrix.suite }}
          STATUS: ${{ job.status }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
